// Clearfix
//
// For modern browsers
// 1. The space content is one way to avoid an Opera bug when the
//    contenteditable attribute is included anywhere else in the document.
//    Otherwise it causes space to appear at the top and bottom of elements
//    that are clearfixed.
// 2. The use of `table` rather than `block` is only necessary if using
//    `:before` to contain the top-margins of child elements.
//
// Source: http://nicolasgallagher.com/micro-clearfix-hack/

@mixin clearfix() {
    &:before,
    &:after {
        content: " "; // 1
        display: table; // 2
    }
    &:after {
        clear: both;
    }
}

// PX to REM - Usage: font-size: rem(37px);
@function rem($px, $base: $font-size-base) {
    @return ($px / $base) * 1rem;
}

@mixin box-shadow($val) {
    box-shadow: ($val);
}

@mixin border-radius($val) {
    border-radius: ($val);
}

@mixin transition($val) {
    transition: ($val);
}

@mixin translateX($val) {
    transform: translateX($val);
}

@mixin translateY($val) {
    transform: translateY($val);
}

@mixin translate3d($val, $val, $val) {
    transform: translate3d($val, $val, $val);
}

@mixin rotate($val) {
    transform: rotate($val);
}

@mixin scale($val) {
    transform: scale($val);
}

@mixin scaleX($val) {
    transform: scaleX($val);
}

@mixin background($val1, $val2, $val3, $val4) {
    background-image: ($val1);
    background-repeat: ($val2);
    background-position: ($val3);
    background-size: ($val4);
}

@mixin animation-name($val) {
    animation-name: ($val);
}

@mixin animation-duration($val) {
    animation-duration: ($val);
}

@mixin flexbox() {
    display: flex;
}

@mixin flex($values) {
    flex: $values;
}

@mixin order($val) {
    order: $val;
}

@mixin align-items($val) {
    align-items: ($val);
}

//---------- Blog Grid Item Size Builder ----------//
@function blog-grid-item-width($container, $columns, $margin) {
    @return floor( ( $container - ( $margin * ( $columns - 1))) / $columns);
}

// Media Screen Queries
@mixin desktop-lg {
    @media (min-width: #{$desktop-lg-width - 1px}) {
        @content;
    }
}

@mixin desktop {
    @media (min-width: #{$desktop-width}) {
        @content;
    }
}

@mixin tablet-real {
    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {
        @content;
    }
}

@mixin tablet {
    @media (max-width: #{$tablet-width}) {
        @content;
    }
}

@mixin mobile {
    @media (max-width: #{$mobile-width}) {
        @content;
    }
}